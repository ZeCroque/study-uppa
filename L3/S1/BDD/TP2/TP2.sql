INSERT INTO SAGAS VALUES('S001', 'Alien',null);

INSERT INTO EPISODES VALUES('F003','S001',1);

INSERT INTO EPISODES VALUES('F002','S001',1);

--Q1-2

ALTER TABLE SAGAS ADD NB_EPIS NUMBER;

UPDATE SAGAS S SET NB_EPIS=(SELECT COUNT(*) FROM EPISODES E WHERE E.COD_SAGA=S.COD_SAGA);

MERGE INTO SAGAS S USING(SELECT COD_SAGA, COUNT(*) AS NB
                        FROM EPISODES
                        GROUP BY COD_SAGA) E
    ON (S.COD_SAGA=E.COD_SAGA)
    WHEN MATCHED THEN UPDATE SET NB_EPIS=NB;

ALTER TABLE PERSONNAGES ADD NB_PROD  NUMBER;

UPDATE PERSONNAGES S SET NB_PROD=(SELECT COUNT(CODPROD) FROM JOUENT J WHERE S.COD_PERS=J.COD_PERS);

--Q3

CREATE OR REPLACE TRIGGER INSERTDEPISODES
AFTER INSERT ON EPISODES
FOR EACH ROW
BEGIN
  UPDATE SAGAS S SET NB_EPIS=NB_EPIS+1
      WHERE :NEW.COD_SAGA=S.COD_SAGA;
END;

CREATE OR REPLACE TRIGGER DELETEDEPISODES
BEFORE DELETE ON EPISODES
FOR EACH ROW
BEGIN
  UPDATE SAGAS S SET NB_EPIS=NB_EPIS-1
      WHERE :OLD.COD_SAGA=S.COD_SAGA;
END;

CREATE OR REPLACE TRIGGER INSERTDJOUENT
AFTER INSERT ON JOUENT
FOR EACH ROW
BEGIN
  UPDATE PERSONNAGES P SET NB_PROD=NB_PROD+1
      WHERE :NEW.COD_PERS=P.COD_PERS;
END;

CREATE OR REPLACE TRIGGER DELETEDJOUENT
BEFORE DELETE ON JOUENT
FOR EACH ROW
BEGIN
  UPDATE PERSONNAGES P SET NB_PROD=NB_PROD-1
      WHERE :OLD.COD_PERS=P.COD_PERS;
END;

CREATE OR REPLACE TRIGGER INSERTDCONTIENT
AFTER INSERT ON CONTIENT
FOR EACH ROW
BEGIN
  UPDATE PERSONNAGES P SET NB_PROD=NB_PROD+1
      WHERE :NEW.COD_PERS=P.COD_PERS;
END;

CREATE OR REPLACE TRIGGER DELETEDCONTIENT
BEFORE DELETE ON CONTIENT
FOR EACH ROW
BEGIN
  UPDATE PERSONNAGES P SET NB_PROD=NB_PROD-1
      WHERE :OLD.COD_PERS=P.COD_PERS;
END;
