--PARTIE 1

--Q1
ALTER TABLE CATEGORIES ADD COD_PARENT CHAR(4);

ALTER TABLE CATEGORIES ADD CONSTRAINT FK_CATEGORIE FOREIGN KEY(COD_PARENT) REFERENCES CATEGORIES;

--Q2
SELECT COD_CAT, NOM_CAT
  FROM CATEGORIES
  START WITH NOM_CAT='Action'
  CONNECT BY COD_PARENT=PRIOR COD_CAT;

SELECT COD_PROD, TITRE
  FROM PRODUCT_CINE
  WHERE COD_CAT IN (SELECT COD_CAT
                      FROM CATEGORIES
                        START WITH NOM_CAT='Action'
                        CONNECT BY COD_PARENT=PRIOR COD_CAT);

--PARTIE 2

--Q1
CREATE OR REPLACE TRIGGER INSERTDFILMS
BEFORE INSERT ON FILMS
FOR EACH ROW
DECLARE
  isAlreadyAdded NUMBER;
BEGIN
  SELECT COUNT(*) INTO isAlreadyAdded FROM PRODUCT_CINE P WHERE P.COD_PROD=:NEW.COD_PROD;
  IF(isAlreadyAdded=0)
    THEN
      INSERT INTO PRODUCT_CINE VALUES (:NEW.COD_PROD, :NEW.COD_CAT, :NEW.TITRE,:NEW.DUREE, :NEW.DATE_SORTIE, :NEW.BUDGET);
  END IF;
END;

CREATE OR REPLACE TRIGGER INSERTDFILM_ANIM
BEFORE INSERT ON FILMS_ANIM
FOR EACH ROW
DECLARE
  isAlreadyAdded NUMBER;
BEGIN
  SELECT COUNT(*) INTO isAlreadyAdded FROM PRODUCT_CINE P WHERE P.COD_PROD=:NEW.COD_PROD;
  IF(isAlreadyAdded=0)
    THEN
      INSERT INTO PRODUCT_CINE VALUES (:NEW.COD_PROD, :NEW.COD_CAT, :NEW.TITRE,:NEW.DUREE, :NEW.DATE_SORTIE, :NEW.BUDGET);
  END IF;
END;

--Q2

CREATE OR REPLACE TRIGGER INSERTDREALISE
BEFORE INSERT ON REALISE
FOR EACH ROW
DECLARE
  realCount NUMBER;
BEGIN
  SELECT COUNT(*) INTO realCount FROM REALISE R WHERE R.COD_PROD=:NEW.COD_PROD;
  IF(realCount=5)
    THEN
      raise_application_error(-20001,'Vous ne pouvez ajouter plus de 5 r√©alisateurs') ;
  END IF;
END;

--Q3

CREATE OR REPLACE PROCEDURE getFilm(categorie IN VARCHAR(50))
IS
  CURSOR filmInCat(cat IN VARCHAR(50)) IS SELECT SELECT COD_PROD, TITRE, DATE_SORTIE
                                                FROM PRODUCT_CINE
                                                WHERE COD_CAT=cat;
  CURSOR filmInFilsCat(cat IN VARCHAR(50)) IS SELECT COD_PROD, TITRE, DATE_SORTIE
                                                FROM PRODUCT_CINE
                                                WHERE COD_CAT IN (SELECT COD_CAT
                                                FROM CATEGORIES
                                                START WITH NOM_CAT=cat
                                                CONNECT BY COD_PARENT=PRIOR COD_CAT;
BEGIN

END;

--EXECUTE nomProc(param);
